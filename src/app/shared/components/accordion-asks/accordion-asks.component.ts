import {Component, ElementRef, QueryList, ViewChildren} from '@angular/core';
import {NgForOf} from "@angular/common";

@Component({
  selector: 'app-accordion-asks',
  standalone: true,
  imports: [
    NgForOf
  ],
  templateUrl: './accordion-asks.component.html',
  styleUrl: './accordion-asks.component.scss'
})
export class AccordionAsksComponent {
  panels = [
    {
      title: "Может ли бот работать с разными сценариями общения?",
      text: `Да! Мы настраиваем бота под ваши задачи: он может отвечать на звонки, обрабатывать заказы, подтверждать записи, проводить опросы и даже работать с возражениями клиентов.`,
      states: false
    },
    {
      title: "Как бот понимает, что ему говорит клиент?",
      text: `Наш бот использует современные алгоритмы распознавания речи и анализирует контекст разговора. Он понимает  не только отдельные слова, но и их смысл, что делает его общение максимально естественным.`,
      states: false
    },
    {
      title: "Можно ли интегрировать бота с CRM и другими сервисами?",
      text: `Да, бот легко интегрируется с CRM-системами (Битрикс24, amoCRM и др.), базами данных, чатами, мессенджерами и другими сервисами. Он автоматически фиксирует все разговоры и передает информацию в вашу систему`,
      states: false
    },
    {
      title: "Не разозлит ли бот клиентов?",
      text: `Нет, потому что наш бот не звучит как робот. Он говорит естественным голосом, не делает длинных пауз и отвечает быстро. По статистике, 95% пользователей думают, что общаются с живым человеком`,
      states: false
    },
    {
      title: "Насколько сложно внедрить голосового бота в мой бизнес?",
      text: `Внедрение очень простое! Мы берем на себя всю настройку и интеграцию. Вам не нужно разбираться в технологиях — просто расскажите, какие задачи должен решать бот, и мы запустим его за вас.`,
      states: false
    },
    {
      title: "Можно ли обучить бота специфике моего бизнеса?",
      text: `Да! Мы можем обучить бота работать с терминологией вашей отрасли, учитывать специфику общения с клиентами и даже имитировать фирменный стиль вашей компании.`,
      states: false
    },
    {
      title: "Как бот реагирует, если не понимает клиента?",
      text: `Если бот не уверен в ответе, он уточняет вопрос или предлагает соединить клиента с живым оператором. Мы также анализируем такие ситуации и дорабатываем бота, чтобы он становился умнее.`,
      states: false
    },
    {
      title: "А если клиент предпочитает говорить с живым оператором?",
      text: "Наш бот понимает, когда клиенту действительно нужен человек, и может переключить звонок на оператора. Также можно настроить сценарии, в которых бот сначала собирает ключевые данные, а затем передает их сотруднику — это сэкономит время и ускорит обработку запроса",
      states: false
    },
    {
      title: "Может ли бот совершать прозвон по холодной базе?",
      text: `Может и делает это эффективно, следуя нормам этики общения и обрабатывая возражения мягко, как обученный оператор. В отличие от обычных роботов, он не допускает агрессивных продаж и всегда говорит вежливо и доброжелательно.`,
      states: false
    },
  ]

  // Ссылки на элементы контента для расчёта высоты
  @ViewChildren('content') contentElements!: QueryList<ElementRef>;

  // Метод для переключения состояния панели
  togglePanel(index: number) {
    const contentElementsArray = this.contentElements.toArray();

    // Проходим по всем панелям
    this.panels.forEach((state, i) => {
      const contentElement = contentElementsArray[i].nativeElement;
      if (i === index) {
        // Переключаем только выбранную панель
        this.panels[i].states = !this.panels[i].states;
        contentElement.style.maxHeight = this.panels[i].states ? `${contentElement.scrollHeight}px` : '0';
      } else if (this.panels[i].states) {
        // Закрываем все остальные открытые панели
        this.panels[i].states = false;
        contentElement.style.maxHeight = '0';
      }
    });
  }
}
